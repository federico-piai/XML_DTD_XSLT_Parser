Terminals which are not used

   EMPTY
   ANY


Grammar

    0 $accept: main $end

    1 main: dtd

    2 dtd: dtd ATTLIST NAME att_definition CLOSE
    3    | dtd ELEMENT NAME choice_or_sequence quantifier CLOSE
    4    | dtd ELEMENT NAME OPENPAR primary_type CLOSEPAR CLOSE
    5    | /* empty */

    6 att_definition: att_definition attribut
    7               | /* empty */

    8 attribut: NAME att_type defaut_declaration

    9 att_type: CDATA
   10         | TOKENTYPE
   11         | type_enumere

   12 type_enumere: OPENPAR liste_enum_plus CLOSEPAR

   13 liste_enum_plus: liste_enum PIPE item_enum

   14 liste_enum: item_enum
   15           | liste_enum PIPE item_enum

   16 item_enum: NAME

   17 defaut_declaration: DECLARATION
   18                   | STRING
   19                   | FIXED STRING

   20 choice_or_sequence: choice
   21                   | sequence

   22 sequence: OPENPAR list_sequence CLOSEPAR

   23 list_sequence: item
   24              | list_sequence COMMA item

   25 choice: OPENPAR list_choice CLOSEPAR

   26 list_choice: list_choice_transition PIPE item

   27 list_choice_transition: item
   28                       | list_choice_transition PIPE item

   29 item: NAME quantifier
   30     | choice_or_sequence quantifier

   31 quantifier: AST
   32           | QMARK
   33           | PLUS
   34           | /* empty */

   35 primary_type: CDATA
   36             | PCDATA
   37             | FIXED


Terminals, with rules where they appear

$end (0) 0
error (256)
ELEMENT (258) 3 4
ATTLIST (259) 2
CLOSE (260) 2 3 4
OPENPAR (261) 4 12 22 25
CLOSEPAR (262) 4 12 22 25
COMMA (263) 24
PIPE (264) 13 15 26 28
FIXED (265) 19 37
EMPTY (266)
ANY (267)
PCDATA (268) 36
AST (269) 31
QMARK (270) 32
PLUS (271) 33
CDATA (272) 9 35
NAME (273) 2 3 4 8 16 29
TOKENTYPE (274) 10
DECLARATION (275) 17
STRING (276) 18 19


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
main (23)
    on left: 1, on right: 0
dtd (24)
    on left: 2 3 4 5, on right: 1 2 3 4
att_definition (25)
    on left: 6 7, on right: 2 6
attribut (26)
    on left: 8, on right: 6
att_type (27)
    on left: 9 10 11, on right: 8
type_enumere (28)
    on left: 12, on right: 11
liste_enum_plus (29)
    on left: 13, on right: 12
liste_enum (30)
    on left: 14 15, on right: 13 15
item_enum (31)
    on left: 16, on right: 13 14 15
defaut_declaration (32)
    on left: 17 18 19, on right: 8
choice_or_sequence (33)
    on left: 20 21, on right: 3 30
sequence (34)
    on left: 22, on right: 21
list_sequence (35)
    on left: 23 24, on right: 22 24
choice (36)
    on left: 25, on right: 20
list_choice (37)
    on left: 26, on right: 25
list_choice_transition (38)
    on left: 27 28, on right: 26 28
item (39)
    on left: 29 30, on right: 23 24 26 27 28
quantifier (40)
    on left: 31 32 33 34, on right: 3 29 30
primary_type (41)
    on left: 35 36 37, on right: 4


state 0

    0 $accept: . main $end

    $default  reduce using rule 5 (dtd)

    main  go to state 1
    dtd   go to state 2


state 1

    0 $accept: main . $end

    $end  shift, and go to state 3


state 2

    1 main: dtd .
    2 dtd: dtd . ATTLIST NAME att_definition CLOSE
    3    | dtd . ELEMENT NAME choice_or_sequence quantifier CLOSE
    4    | dtd . ELEMENT NAME OPENPAR primary_type CLOSEPAR CLOSE

    ELEMENT  shift, and go to state 4
    ATTLIST  shift, and go to state 5

    $default  reduce using rule 1 (main)


state 3

    0 $accept: main $end .

    $default  accept


state 4

    3 dtd: dtd ELEMENT . NAME choice_or_sequence quantifier CLOSE
    4    | dtd ELEMENT . NAME OPENPAR primary_type CLOSEPAR CLOSE

    NAME  shift, and go to state 6


state 5

    2 dtd: dtd ATTLIST . NAME att_definition CLOSE

    NAME  shift, and go to state 7


state 6

    3 dtd: dtd ELEMENT NAME . choice_or_sequence quantifier CLOSE
    4    | dtd ELEMENT NAME . OPENPAR primary_type CLOSEPAR CLOSE

    OPENPAR  shift, and go to state 8

    choice_or_sequence  go to state 9
    sequence            go to state 10
    choice              go to state 11


state 7

    2 dtd: dtd ATTLIST NAME . att_definition CLOSE

    $default  reduce using rule 7 (att_definition)

    att_definition  go to state 12


state 8

    4 dtd: dtd ELEMENT NAME OPENPAR . primary_type CLOSEPAR CLOSE
   22 sequence: OPENPAR . list_sequence CLOSEPAR
   25 choice: OPENPAR . list_choice CLOSEPAR

    OPENPAR  shift, and go to state 13
    FIXED    shift, and go to state 14
    PCDATA   shift, and go to state 15
    CDATA    shift, and go to state 16
    NAME     shift, and go to state 17

    choice_or_sequence      go to state 18
    sequence                go to state 10
    list_sequence           go to state 19
    choice                  go to state 11
    list_choice             go to state 20
    list_choice_transition  go to state 21
    item                    go to state 22
    primary_type            go to state 23


state 9

    3 dtd: dtd ELEMENT NAME choice_or_sequence . quantifier CLOSE

    AST    shift, and go to state 24
    QMARK  shift, and go to state 25
    PLUS   shift, and go to state 26

    $default  reduce using rule 34 (quantifier)

    quantifier  go to state 27


state 10

   21 choice_or_sequence: sequence .

    $default  reduce using rule 21 (choice_or_sequence)


state 11

   20 choice_or_sequence: choice .

    $default  reduce using rule 20 (choice_or_sequence)


state 12

    2 dtd: dtd ATTLIST NAME att_definition . CLOSE
    6 att_definition: att_definition . attribut

    CLOSE  shift, and go to state 28
    NAME   shift, and go to state 29

    attribut  go to state 30


state 13

   22 sequence: OPENPAR . list_sequence CLOSEPAR
   25 choice: OPENPAR . list_choice CLOSEPAR

    OPENPAR  shift, and go to state 13
    NAME     shift, and go to state 17

    choice_or_sequence      go to state 18
    sequence                go to state 10
    list_sequence           go to state 19
    choice                  go to state 11
    list_choice             go to state 20
    list_choice_transition  go to state 21
    item                    go to state 22


state 14

   37 primary_type: FIXED .

    $default  reduce using rule 37 (primary_type)


state 15

   36 primary_type: PCDATA .

    $default  reduce using rule 36 (primary_type)


state 16

   35 primary_type: CDATA .

    $default  reduce using rule 35 (primary_type)


state 17

   29 item: NAME . quantifier

    AST    shift, and go to state 24
    QMARK  shift, and go to state 25
    PLUS   shift, and go to state 26

    $default  reduce using rule 34 (quantifier)

    quantifier  go to state 31


state 18

   30 item: choice_or_sequence . quantifier

    AST    shift, and go to state 24
    QMARK  shift, and go to state 25
    PLUS   shift, and go to state 26

    $default  reduce using rule 34 (quantifier)

    quantifier  go to state 32


state 19

   22 sequence: OPENPAR list_sequence . CLOSEPAR
   24 list_sequence: list_sequence . COMMA item

    CLOSEPAR  shift, and go to state 33
    COMMA     shift, and go to state 34


state 20

   25 choice: OPENPAR list_choice . CLOSEPAR

    CLOSEPAR  shift, and go to state 35


state 21

   26 list_choice: list_choice_transition . PIPE item
   28 list_choice_transition: list_choice_transition . PIPE item

    PIPE  shift, and go to state 36


state 22

   23 list_sequence: item .
   27 list_choice_transition: item .

    PIPE      reduce using rule 27 (list_choice_transition)
    $default  reduce using rule 23 (list_sequence)


state 23

    4 dtd: dtd ELEMENT NAME OPENPAR primary_type . CLOSEPAR CLOSE

    CLOSEPAR  shift, and go to state 37


state 24

   31 quantifier: AST .

    $default  reduce using rule 31 (quantifier)


state 25

   32 quantifier: QMARK .

    $default  reduce using rule 32 (quantifier)


state 26

   33 quantifier: PLUS .

    $default  reduce using rule 33 (quantifier)


state 27

    3 dtd: dtd ELEMENT NAME choice_or_sequence quantifier . CLOSE

    CLOSE  shift, and go to state 38


state 28

    2 dtd: dtd ATTLIST NAME att_definition CLOSE .

    $default  reduce using rule 2 (dtd)


state 29

    8 attribut: NAME . att_type defaut_declaration

    OPENPAR    shift, and go to state 39
    CDATA      shift, and go to state 40
    TOKENTYPE  shift, and go to state 41

    att_type      go to state 42
    type_enumere  go to state 43


state 30

    6 att_definition: att_definition attribut .

    $default  reduce using rule 6 (att_definition)


state 31

   29 item: NAME quantifier .

    $default  reduce using rule 29 (item)


state 32

   30 item: choice_or_sequence quantifier .

    $default  reduce using rule 30 (item)


state 33

   22 sequence: OPENPAR list_sequence CLOSEPAR .

    $default  reduce using rule 22 (sequence)


state 34

   24 list_sequence: list_sequence COMMA . item

    OPENPAR  shift, and go to state 13
    NAME     shift, and go to state 17

    choice_or_sequence  go to state 18
    sequence            go to state 10
    choice              go to state 11
    item                go to state 44


state 35

   25 choice: OPENPAR list_choice CLOSEPAR .

    $default  reduce using rule 25 (choice)


state 36

   26 list_choice: list_choice_transition PIPE . item
   28 list_choice_transition: list_choice_transition PIPE . item

    OPENPAR  shift, and go to state 13
    NAME     shift, and go to state 17

    choice_or_sequence  go to state 18
    sequence            go to state 10
    choice              go to state 11
    item                go to state 45


state 37

    4 dtd: dtd ELEMENT NAME OPENPAR primary_type CLOSEPAR . CLOSE

    CLOSE  shift, and go to state 46


state 38

    3 dtd: dtd ELEMENT NAME choice_or_sequence quantifier CLOSE .

    $default  reduce using rule 3 (dtd)


state 39

   12 type_enumere: OPENPAR . liste_enum_plus CLOSEPAR

    NAME  shift, and go to state 47

    liste_enum_plus  go to state 48
    liste_enum       go to state 49
    item_enum        go to state 50


state 40

    9 att_type: CDATA .

    $default  reduce using rule 9 (att_type)


state 41

   10 att_type: TOKENTYPE .

    $default  reduce using rule 10 (att_type)


state 42

    8 attribut: NAME att_type . defaut_declaration

    FIXED        shift, and go to state 51
    DECLARATION  shift, and go to state 52
    STRING       shift, and go to state 53

    defaut_declaration  go to state 54


state 43

   11 att_type: type_enumere .

    $default  reduce using rule 11 (att_type)


state 44

   24 list_sequence: list_sequence COMMA item .

    $default  reduce using rule 24 (list_sequence)


state 45

   26 list_choice: list_choice_transition PIPE item .
   28 list_choice_transition: list_choice_transition PIPE item .

    PIPE      reduce using rule 28 (list_choice_transition)
    $default  reduce using rule 26 (list_choice)


state 46

    4 dtd: dtd ELEMENT NAME OPENPAR primary_type CLOSEPAR CLOSE .

    $default  reduce using rule 4 (dtd)


state 47

   16 item_enum: NAME .

    $default  reduce using rule 16 (item_enum)


state 48

   12 type_enumere: OPENPAR liste_enum_plus . CLOSEPAR

    CLOSEPAR  shift, and go to state 55


state 49

   13 liste_enum_plus: liste_enum . PIPE item_enum
   15 liste_enum: liste_enum . PIPE item_enum

    PIPE  shift, and go to state 56


state 50

   14 liste_enum: item_enum .

    $default  reduce using rule 14 (liste_enum)


state 51

   19 defaut_declaration: FIXED . STRING

    STRING  shift, and go to state 57


state 52

   17 defaut_declaration: DECLARATION .

    $default  reduce using rule 17 (defaut_declaration)


state 53

   18 defaut_declaration: STRING .

    $default  reduce using rule 18 (defaut_declaration)


state 54

    8 attribut: NAME att_type defaut_declaration .

    $default  reduce using rule 8 (attribut)


state 55

   12 type_enumere: OPENPAR liste_enum_plus CLOSEPAR .

    $default  reduce using rule 12 (type_enumere)


state 56

   13 liste_enum_plus: liste_enum PIPE . item_enum
   15 liste_enum: liste_enum PIPE . item_enum

    NAME  shift, and go to state 47

    item_enum  go to state 58


state 57

   19 defaut_declaration: FIXED STRING .

    $default  reduce using rule 19 (defaut_declaration)


state 58

   13 liste_enum_plus: liste_enum PIPE item_enum .
   15 liste_enum: liste_enum PIPE item_enum .

    PIPE      reduce using rule 15 (liste_enum)
    $default  reduce using rule 13 (liste_enum_plus)
